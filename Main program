from turtle import *
import turtle
speed(1000000000000)
setup(800,800)

def triangle_Spiral(colour):
    
    bgcolor("black")
    color(colour)
    
    forward(length + 20)
    right(121)
    
def cube(colour1, colour2, colour3):
    color(colour1)
    begin_fill()
    left(20)
    forward(50)
    right(40)
    forward(50)
    right(140)
    forward(50)
    right(40)
    forward(50)
    end_fill()
    
    color(colour2)
    begin_fill()
    left(110)
    forward(50)
    left(70)
    forward(50)
    left(110)
    forward(50)
    end_fill()
    
    color(colour3)
    begin_fill()
    backward(50)
    right(70)
    forward(50)
    left(70)
    forward(50)
    end_fill()
    
    right(90)
    
def square(colour):
    color(colour)
    begin_fill()
    for i in range(4):
        forward(20)
        right(90)
    forward(20)
    end_fill()
    
def quarter_circle(colour):
    penup()
    forward(20)
    right(90)
    forward(20)
    right(180)
    pendown()
    
    color(colour)
    begin_fill()
    circle(20,90)
    
    left(90)
    forward(20)
    left(90)
    forward(20)
    end_fill()
    
    penup()
    left(90)
    forward(20)
    right(90)
    pendown()
    
def reverse_quarter_circle(colour):
    penup()
    right(90)
    forward(20)
    right(180)
    pendown()
    
    color(colour)
    begin_fill()
    circle(-20,90)
    
    right(90)
    forward(20)
    right(90)
    forward(20)
    end_fill()
    
    penup()
    right(180)
    forward(20)
    left(90)
    forward(20)
    right(90)
    pendown()
    
def upright_triangle(colour):
    color(colour)
    penup()
    forward(20)
    right(90)
    pendown()
    
    begin_fill()
    forward(20)
    right(90)
    forward(20)
    right(90+45)
    forward(28.28)
    right(45)
    end_fill()
    
def reverse_upright_triangle(colour):
    color(colour)
    
    penup()
    right(90)
    forward(20)
    left(90)
    penup()
    
    begin_fill()
    left(90)
    forward(20)
    left(180+45)
    forward(28.28)
    right(45)
    end_fill()
    
    penup()
    left(180)
    forward(20)
    right(90)
    pendown()
    
def oval(colour):
    right(90)
    forward(20)
    left(95)
    
    for i in range(2):
        color(colour)
        begin_fill()
        circle(20,90)
        left(90)
        end_fill()
    
    penup()
    right(5)
    forward(20)
    left(90)
    forward(20)
    right(90)
    pendown()
    
def reverse_oval(colour):
    for i in range(2):
        color(colour)
        begin_fill()
        circle(-20,90)
        left(270)
        end_fill()
    
    penup()
    forward(20)
    pendown()
    
def upside_down_triangle(colour):
    color(colour)
    begin_fill()
    forward(20)
    right(90)
    forward(20)
    right(90+45)
    forward(20)
    end_fill()
    
    penup()
    forward(10)
    right(90+45)
    forward(20)
    pendown()
    
def upside_down_quarter_circle(colour):
    penup()
    forward(20)
    pendown()
    
    right(90)
    quarter_circle(colour)
    
    penup()
    right(180)
    forward(20)
    right(90)
    pendown()

def reverse_upside_down_quarter_circle(colour):
    penup()
    forward(20)
    right(90)
    forward(20)
    left(90)
    pendown()
    
    right(180)
    quarter_circle(colour)
    
    penup()
    right(180)
    forward(20)
    left(90)
    forward(20)
    right(90)
    pendown()

def row_one():
    upright_triangle(colours[2])
    oval(colours[1])
    quarter_circle(colours[1])
    reverse_quarter_circle(colours[1])
    reverse_oval(colours[1])
    reverse_upright_triangle(colours[2])
    upside_down_triangle(colours[2])
    reverse_oval(colours[1])
    upside_down_quarter_circle(colours[1])
    reverse_quarter_circle(colours[1])
    reverse_oval(colours[1])
    reverse_upright_triangle(colours[2])
    upright_triangle(colours[2])
    oval(colours[1])
    quarter_circle(colours[1])
    reverse_quarter_circle(colours[1])
    reverse_oval(colours[1])
    reverse_upright_triangle(colours[2])
    upside_down_triangle(colours[2])
    reverse_oval(colours[1])
    
    penup()
    backward(399)
    right(90)
    forward(22)
    left(90)
    pendown()
    
def row_two():
    square(colours[1])
    reverse_upside_down_quarter_circle(colours[0])
    upside_down_quarter_circle(colours[2])
    reverse_upside_down_quarter_circle(colours[2])
    upside_down_quarter_circle(colours[0])
    square(colours[1])
    reverse_upside_down_quarter_circle(colours[0])
    oval(colours[1])
    upside_down_quarter_circle(colours[2])
    reverse_upside_down_quarter_circle(colours[2])
    upside_down_quarter_circle(colours[0])
    square(colours[1])
    square(colours[1])
    reverse_upside_down_quarter_circle(colours[0])
    upside_down_quarter_circle(colours[2])
    reverse_upside_down_quarter_circle(colours[2])
    upside_down_quarter_circle(colours[0])
    square(colours[1])
    reverse_upside_down_quarter_circle(colours[0])
    oval(colours[1])
    
    penup()
    backward(399)
    right(90)
    forward(22)
    left(90)
    pendown()
    
def row_three():
    quarter_circle(colours[0])
    oval(colours[1])
    quarter_circle(colours[2])
    reverse_quarter_circle(colours[2])
    oval(colours[1])
    reverse_quarter_circle(colours[0])
    square(colours[1])
    quarter_circle(colours[0])
    quarter_circle(colours[2])
    reverse_quarter_circle(colours[2])
    oval(colours[1])
    reverse_quarter_circle(colours[0])
    quarter_circle(colours[0])
    oval(colours[1])
    quarter_circle(colours[2])
    reverse_quarter_circle(colours[2])
    oval(colours[1])
    quarter_circle(colours[0])
    square(colours[1])
    quarter_circle(colours[0]) 
    
    penup()
    backward(399)
    right(90)
    forward(22)
    left(90)
    pendown()

colours = ["blue", "yellow", "red"]

print("row, spiral or cubes?")
user_Choice = input("Type row, spiral or cubes: ")
    
if user_Choice == "row":
    setup(405,400)
    
    penup()
    setpos(-202,200)
    pendown()
    
    bgcolor("black")
    
    for i in range(6):
        row_one()
        row_two()
        row_three()
    
    
elif user_Choice == "cubes":
    setup(850,800)
    colours1 = []
    bgcolor("black")

    for i in range(3):
        cube_colours = input("Please say the colours you want: ")
        colours1.append(cube_colours)
        
    penup()
    setpos(-425,380)
    pendown()

    
    for i in range(6):

        for i in range(9):
            cube(colours1[0], colours1[1], colours1[2])
    
        x = turtle.xcor()
        y = turtle.ycor()

        penup()
        setpos(x-895,y-66)
        pendown()

        for i in range(10):
            cube(colours1[0], colours1[1], colours1[2])

        x = turtle.xcor()
        y = turtle.ycor()

        penup()
        setpos(x-890,y-64)
        pendown()
        

elif user_Choice == "spiral":
    canvas_Size = int(input("What size would you like the canvas to be?: "))
    setup(canvas_Size,canvas_Size)
    circle_Colour = input("What colour would you like the spiral to be? ")
    
    while length <= (canvas_Size * 0.70):
        triangle_Spiral(circle_Colour)
        length = length + 1 

exitonclick()
