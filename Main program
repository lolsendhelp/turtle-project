from turtle import *
speed(1000000000000)
setup(800,800)

def triangle_Spiral(colour):
    
    bgcolor("black")
    color(colour)
    
    forward(length + 20)
    right(121)
    
def quarter_circle(colour):
    penup()
    forward(20)
    right(90)
    forward(20)
    right(180)
    pendown()
    
    color(colour)
    begin_fill()
    circle(20,90)
    
    left(90)
    forward(20)
    left(90)
    forward(20)
    end_fill()
    
    penup()
    left(90)
    forward(20)
    right(90)
    pendown()
    
def reverse_quarter_circle(colour):
    penup()
    right(90)
    forward(20)
    right(180)
    pendown()
    
    color(colour)
    begin_fill()
    circle(-20,90)
    
    right(90)
    forward(20)
    right(90)
    forward(20)
    end_fill()
    
    penup()
    right(180)
    forward(20)
    left(90)
    forward(20)
    right(90)
    pendown()
    
def upright_triangle(colour):
    color(colour)
    penup()
    forward(20)
    right(90)
    pendown()
    
    begin_fill()
    forward(20)
    right(90)
    forward(20)
    right(90+45)
    forward(28.28)
    right(45)
    end_fill()
    
def reverse_upright_triangle(colour):
    color(colour)
    
    penup()
    right(90)
    forward(20)
    left(90)
    penup()
    
    begin_fill()
    left(90)
    forward(20)
    left(180+45)
    forward(28.28)
    right(45)
    end_fill()
    
    penup()
    left(180)
    forward(20)
    right(90)
    pendown()
    
def oval(colour):
    right(90)
    forward(20)
    left(95)
    
    for i in range(2):
        color(colour)
        begin_fill()
        circle(20,90)
        left(90)
        end_fill()
    
    penup()
    right(5)
    forward(20)
    left(90)
    forward(20)
    right(90)
    pendown()
    
def reverse_oval(colour):
    for i in range(2):
        color(colour)
        begin_fill()
        circle(-20,90)
        left(270)
        end_fill()
    
    penup()
    forward(20)
    pendown()

def row_one():
    upright_triangle(colours[2])
    oval(colours[1])
    quarter_circle(colours[1])
    reverse_quarter_circle(colours[1])
    reverse_oval(colours[1])
    reverse_upright_triangle(colours[2])

length = 1
colours = ["blue", "yellow", "red"]

colours = ["blue", "yellow", "red"]

startingX = int(-(400/2)+10)
startingY = int((400/2)-10)

print("would you like multiple rows of different shapes or a triangle spiral?")
user_Choice = input("Type row or spiral: ")
    
if user_Choice == "row":
    penup()
    setpos(startingX,startingY)
    pendown()
    
    setup(400,400)
    
    bgcolor("black")
    
    row_one()

elif user_Choice == "spiral":
    canvas_Size = int(input("What size would you like the canvas to be?: "))
    setup(canvas_Size,canvas_Size)
    circle_Colour = input("What colour would you like the spiral to be? ")
    
    while length <= (canvas_Size * 0.70):
        triangle_Spiral(circle_Colour)
        length = length + 1 

exitonclick()
